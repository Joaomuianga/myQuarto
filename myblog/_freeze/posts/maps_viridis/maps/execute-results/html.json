{
  "hash": "5e7615823c1f4dd99c33fd379378af72",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Choropleth map with ggplot2 and viridis\"\nlisting:\n  contents: posts/maps_viridis\n  sort: \"date desc\"\n  type: default\n  categories: true\n  sort-ui: false\n  filter-ui: false\n  fields: [image, date, title, reading-time, description]\npage-layout: full\ntitle-block-banner: false\nimage: \"photo.jpg\"\ndate: \"2024-07-24\"\ncategories: [R, API,Choropleth map, Viridis,  Hospitalization, COVID-19]\ndescription: \"A briefing of the Choropleth map with ggplot2 and viridis in R \"\n\nexecute: \n  message: false\n  warning: false\n  \n  editor_options:\n    chunk_output_type: console\n    \nformat: \n  html:\n    code-fold: true\neditor: visual\n---\n\n\n\n# How to build\n\nThis post shows the simple way to load geospatial data, merge with different data formats (csv, excel, etc) and build a Choropleth map with ggplot2, viridis in R\n\n# About Choroplet map\n\nChoropleth map is composed of colored polygons. It is used to represent spatial variations of a quantity. Making choropleth maps require two main types of inputs 1- Geometry information: - This can either be a supplied GeoJSON file where each feature has either an `id` field or some identifying value in `properties`; or - one of the built-in geometries within `plot_ly` 2- A list of values indexed by feature identifier.\n\n# Import shapefile\n\nI will load essential libraries to import data and geospatial analysis.\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"false\"}\npacman::p_load(rio,             # import function\n               here,            # file path\n               scales,          # percent function\n               janitor,         # summary table \n               sf,              # to manager spatial data using a simple feature format\n               tidyverse        # data management and visualization\n               )\n```\n:::\n\n\n\nI downloaded the US states shapefile at [census.gov](https://www.census.gov/geographies/mapping-files/time-series/geo/carto-boundary-file.html) website, it's for public use. Use `read_sf()` function to import the shapefile in your local computer; use `here()` function to say what is the file path.\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"false\"}\n# Import shapefile\nus_states_sf <- read_sf(here(\"gis\", \"spf_usa\", \"usa_shapefile.shp\")) %>%\n  janitor::clean_names() \n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#|code-fold: false\n\nhead(us_states_sf, 5)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSimple feature collection with 5 features and 9 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: -103.0026 ymin: 30.17394 xmax: -75.24227 ymax: 40.6388\nGeodetic CRS:  NAD83\n# A tibble: 5 × 10\n  statefp statens  affgeoid    geoid stusps name           lsad    aland  awater\n  <chr>   <chr>    <chr>       <chr> <chr>  <chr>          <chr>   <dbl>   <dbl>\n1 28      01779790 0400000US28 28    MS     Mississippi    00    1.22e11 3.93e 9\n2 37      01027616 0400000US37 37    NC     North Carolina 00    1.26e11 1.35e10\n3 40      01102857 0400000US40 40    OK     Oklahoma       00    1.78e11 3.37e 9\n4 51      01779803 0400000US51 51    VA     Virginia       00    1.02e11 8.53e 9\n5 54      01779805 0400000US54 54    WV     West Virginia  00    6.23e10 4.89e 8\n# ℹ 1 more variable: geometry <MULTIPOLYGON [°]>\n```\n\n\n:::\n:::\n\n\n\n# Basic map\n\nNow we have a geospatial object called `us_stat_sf`, we can plot a basic map using `ggplot()` and `geom_df()`\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"false\"}\nggplot(data = us_states_sf)+\n  geom_sf(fill = \"white\", show.legend = FALSE)\n```\n\n::: {.cell-output-display}\n![basic_map](maps_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n\n# Read the dataset\n\nThe database is available for download at the [healthData.gov](https://healthdata.gov/resource/g62h-syeh.json?$limit=50000), To have the `New hospitalization` a calculation among some core indicators that match with inpatients admission definition cases and were group by states.\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"false\"}\n# print first 5 rows of the dataset containing hospitalization\nhosp_data <- import(here(\"data\", \"usa_hosp.csv\"))\n\nhead(hosp_data, 5)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  state new_hospitalization\n1    AK               10651\n2    AL              134959\n3    AR               77594\n4    AS                 225\n5    AZ              173993\n```\n\n\n:::\n:::\n\n\n\n# Merge geospatial and numeric data\n\nThe `id` in common is shapefile: `stusps` and dataset `state`\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"false\"}\n# Join or merge geospatial and numeric data\nus_states_sf <- us_states_sf %>%\n  left_join(hosp_data, by = c(\"stusps\" = \"state\"))\n\nhead(us_states_sf, 5)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSimple feature collection with 5 features and 10 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: -103.0026 ymin: 30.17394 xmax: -75.24227 ymax: 40.6388\nGeodetic CRS:  NAD83\n# A tibble: 5 × 11\n  statefp statens  affgeoid    geoid stusps name           lsad    aland  awater\n  <chr>   <chr>    <chr>       <chr> <chr>  <chr>          <chr>   <dbl>   <dbl>\n1 28      01779790 0400000US28 28    MS     Mississippi    00    1.22e11 3.93e 9\n2 37      01027616 0400000US37 37    NC     North Carolina 00    1.26e11 1.35e10\n3 40      01102857 0400000US40 40    OK     Oklahoma       00    1.78e11 3.37e 9\n4 51      01779803 0400000US51 51    VA     Virginia       00    1.02e11 8.53e 9\n5 54      01779805 0400000US54 54    WV     West Virginia  00    6.23e10 4.89e 8\n# ℹ 2 more variables: geometry <MULTIPOLYGON [°]>, new_hospitalization <int>\n```\n\n\n:::\n:::\n\n\n\n# Basic map with numeric variable\n\nWe will plot a basic choropleth map to show inpatients admission distribution by US states\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"false\"}\nggplot(us_states_sf) +\n  geom_sf(aes(fill = new_hospitalization))+\n  theme_void()\n```\n\n::: {.cell-output-display}\n![](maps_files/figure-html/unnamed-chunk-7-1.png){width=960}\n:::\n:::\n\n\n\n# Customized choropleth map\n\nThis step will transform and give a good image to the plot, adding color palette, legend, tittle, scale, etc.\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"false\"}\nggplot(us_states_sf, mapping = aes(fill = new_hospitalization))+\n  geom_sf(linewidth = 0,\n          alpha = 0.9,\n          position = \"identity\")+\n  geom_sf_text(data = us_states_sf, aes(label = stusps), size = 2.5, colour = \"white\", fontface = \"bold\")+\n  theme_void()+\n  scale_fill_viridis_c(\n    name = \"Number of inpatients admission\",\n    labels = scales::comma,\n    breaks = c(1, 50000, 100000, 200000, 400000, 600000, 800000),\n    guide = guide_legend(\n      keyheight = unit(3, units = \"mm\"),\n      keywidth = unit(12, units = \"mm\"),\n      label.position = \"bottom\",\n      title.position = \"top\",\n      nrow = 1\n    )\n  )+ \n  labs(title = \"COVID-19: Hospitalization in USA\",\n       subtitle = \"Total of inpatients admission from 2020-01-01 to 2024-04-27 in 50 states\")+\n  theme(\n    text = element_text(color = \"#22211d\"),\n    plot.background = element_rect(fill = \"#f5f5f2\", color = NA),\n    panel.background  = element_rect(fill = \"#f5f5f2\", color = NA),\n    legend.background  = element_rect(fill = \"#f5f5f2\", color = NA),\n    \n    plot.title = element_text(\n      size = 18, hjust = 0.01, color = \"#4e4d47\",\n      margin = margin( b= 0.1, t= 0.4, l = 2, unit = \"cm\"\n      )\n    ),\n\n        plot.subtitle = element_text(\n      size = 12, hjust = 0.01,\n      color = \"#4e4d47\",\n      margin = margin(\n        b = -0.1, t = 0.43, l = 2,\n        unit = \"cm\"\n      )\n    ),\n    plot.caption = element_text(\n      size = 10,\n      color = \"#4e4d47\",\n      margin = margin(\n        b = -0.1, r = -99, t = 0.3,\n        unit = \"cm\"\n      )\n    ),\n\n      legend.position = c(0.2, 0.08)\n  ) \n```\n\n::: {.cell-output-display}\n![](maps_files/figure-html/map-1.png){width=960}\n:::\n:::\n",
    "supporting": [
      "maps_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}